name: (Manual) 3 - Deploy to Live
on: 
  workflow_dispatch:
    inputs:
      pantheon_tag:
        description: 'Deploy to sites tagged:'
        required: true
        default: 'all'
      do_backup:
        description: 'Create Backup First?'
        required: true
        type: choice
        options: 
          - 'Yes'
          - 'No'
        default: 'Yes'
      do_notify:
        description: 'Notify Slack Deploy Channel?'
        required: true
        type: choice
        options: 
          - 'Yes'
          - 'No'
        default: 'Yes'
jobs:
  build:
    name: Deploy code to LIVE
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
   # Install Terminus.
    - name: Install and Authorize Terminus
      uses: pantheon-systems/terminus-github-actions@main
      with:
        pantheon-machine-token: ${{ secrets.TERMINUS_MACHINE_TOKEN }}
    - name: Execute Parallel Deployment
      env:
        ORG_UUID: ${{ secrets.ORG_UUID }}
        UPSTREAM_UUID: ${{ secrets.UPSTREAM_UUID }}
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        INPUT_PANTHEON_TAG: ${{ github.event.inputs.pantheon_tag }}
        DO_BACKUP: ${{ github.event.inputs.do_backup }}
        DO_NOTIFY: ${{ github.event.inputs.do_notify }}
      run: |
        if  [ $INPUT_PANTHEON_TAG == all ]
        then
          echo "Deploying all sites running this upstream."
          terminus org:site:list $ORG_UUID --format list --upstream $UPSTREAM_UUID --field name | sort -V | parallel --jobs 100 .github/scripts/live-deploy.sh {}
        else
          echo "Deploying sites with tag: $INPUT_PANTHEON_TAG."
          terminus org:site:list $ORG_UUID --format list --upstream $UPSTREAM_UUID  --tag $INPUT_PANTHEON_TAG --field name | sort -V | parallel --jobs 100 .github/scripts/live-deploy.sh {}
        fi
  newrelic:
    runs-on: ubuntu-latest
    name: New Relic
    steps:
      # This step builds a var with the release tag value to use later
      - name: Set Release Version from Tag
        run: echo "RELEASE_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
      # This step creates a new Change Tracking Marker
      - name: New Relic Application Deployment Marker
        uses: newrelic/deployment-marker-action@v2.3.0
        with:
          apiKey: ${{ secrets.NEW_RELIC_API_KEY }}
          guid: ${{ secrets.NEW_RELIC_DEPLOYMENT_ENTITY_GUID }}
          version: "${{ env.RELEASE_VERSION }}"
          user: "${{ github.actor }}"
